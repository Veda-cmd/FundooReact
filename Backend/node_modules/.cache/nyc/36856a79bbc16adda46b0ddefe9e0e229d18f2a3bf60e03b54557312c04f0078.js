var cov_14fuld21fz=function(){var path="/home/admin1/Desktop/FundooApp/Backend/models/userModel.js";var hash="0a3d73166945ee34717c492d67cc5705dbdebe6c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/FundooApp/Backend/models/userModel.js",statementMap:{"0":{start:{line:12,column:17},end:{line:12,column:36}},"1":{start:{line:13,column:15},end:{line:13,column:48}},"2":{start:{line:19,column:19},end:{line:70,column:2}},"3":{start:{line:76,column:14},end:{line:76,column:47}},"4":{start:{line:92,column:8},end:{line:105,column:10}},"5":{start:{line:94,column:12},end:{line:104,column:14}},"6":{start:{line:98,column:16},end:{line:98,column:30}},"7":{start:{line:102,column:16},end:{line:102,column:34}},"8":{start:{line:103,column:16},end:{line:103,column:28}},"9":{start:{line:112,column:8},end:{line:121,column:10}},"10":{start:{line:116,column:12},end:{line:116,column:32}},"11":{start:{line:120,column:12},end:{line:120,column:26}},"12":{start:{line:127,column:21},end:{line:132,column:10}},"13":{start:{line:133,column:8},end:{line:146,column:11}},"14":{start:{line:135,column:12},end:{line:144,column:13}},"15":{start:{line:136,column:16},end:{line:136,column:29}},"16":{start:{line:139,column:31},end:{line:142,column:17}},"17":{start:{line:143,column:16},end:{line:143,column:39}},"18":{start:{line:152,column:8},end:{line:157,column:9}},"19":{start:{line:158,column:8},end:{line:158,column:32}},"20":{start:{line:164,column:8},end:{line:176,column:10}},"21":{start:{line:166,column:12},end:{line:175,column:14}},"22":{start:{line:170,column:16},end:{line:170,column:53}},"23":{start:{line:174,column:16},end:{line:174,column:27}},"24":{start:{line:181,column:0},end:{line:181,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:90,column:4},end:{line:90,column:5}},loc:{start:{line:91,column:4},end:{line:106,column:5}},line:91},"1":{name:"(anonymous_1)",decl:{start:{line:92,column:27},end:{line:92,column:28}},loc:{start:{line:93,column:8},end:{line:105,column:9}},line:93},"2":{name:"(anonymous_2)",decl:{start:{line:95,column:18},end:{line:95,column:19}},loc:{start:{line:96,column:12},end:{line:99,column:13}},line:96},"3":{name:"(anonymous_3)",decl:{start:{line:100,column:19},end:{line:100,column:20}},loc:{start:{line:101,column:12},end:{line:104,column:13}},line:101},"4":{name:"(anonymous_4)",decl:{start:{line:108,column:4},end:{line:108,column:5}},loc:{start:{line:109,column:4},end:{line:123,column:5}},line:109},"5":{name:"(anonymous_5)",decl:{start:{line:113,column:14},end:{line:113,column:15}},loc:{start:{line:114,column:8},end:{line:117,column:9}},line:114},"6":{name:"(anonymous_6)",decl:{start:{line:118,column:15},end:{line:118,column:16}},loc:{start:{line:119,column:8},end:{line:121,column:9}},line:119},"7":{name:"(anonymous_7)",decl:{start:{line:125,column:4},end:{line:125,column:5}},loc:{start:{line:126,column:4},end:{line:147,column:5}},line:126},"8":{name:"(anonymous_8)",decl:{start:{line:133,column:18},end:{line:133,column:19}},loc:{start:{line:134,column:8},end:{line:146,column:9}},line:134},"9":{name:"(anonymous_9)",decl:{start:{line:149,column:4},end:{line:149,column:5}},loc:{start:{line:150,column:4},end:{line:160,column:5}},line:150},"10":{name:"(anonymous_10)",decl:{start:{line:162,column:4},end:{line:162,column:5}},loc:{start:{line:163,column:4},end:{line:177,column:5}},line:163},"11":{name:"(anonymous_11)",decl:{start:{line:164,column:27},end:{line:164,column:28}},loc:{start:{line:165,column:8},end:{line:176,column:9}},line:165},"12":{name:"(anonymous_12)",decl:{start:{line:167,column:18},end:{line:167,column:19}},loc:{start:{line:168,column:12},end:{line:171,column:13}},line:168},"13":{name:"(anonymous_13)",decl:{start:{line:172,column:19},end:{line:172,column:20}},loc:{start:{line:173,column:12},end:{line:175,column:13}},line:173}},branchMap:{"0":{loc:{start:{line:135,column:12},end:{line:144,column:13}},type:"if",locations:[{start:{line:135,column:12},end:{line:144,column:13}},{start:{line:135,column:12},end:{line:144,column:13}}],line:135}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"0a3d73166945ee34717c492d67cc5705dbdebe6c"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/**
* @description: 
* @file: userModel.js
* @author: Vedant Nare
* @version: 1.0
*/ /**
*@description Dependencies are installed for execution. 
*/const mongoose=(cov_14fuld21fz.s[0]++,require('mongoose'));const logger=(cov_14fuld21fz.s[1]++,require('../services/logService'));/**
*@description User schema is defined for storing data in database.
*/const userSchema=(cov_14fuld21fz.s[2]++,mongoose.Schema({firstName:{type:String,required:true},lastName:{type:String,required:true},email:{type:String,required:true},password:{type:String,required:true},isVerified:{type:Boolean,default:false,required:false},imageUrl:{type:String,required:false},forgot_token:{type:String,required:false},longUrl:{type:String,required:false},shortUrl:{type:String,required:false},urlCode:{type:String,required:false},created_at:{type:Date,default:Date.now},updated_at:{type:Date,default:Date.now}}));/**
*@description User Model is defined for storing object in database. 
*/const User=(cov_14fuld21fz.s[3]++,mongoose.model('user',userSchema));/**
*@description UserModel has the following functions:
* findOne: for finding a particular record from database. It takes a single parameter.
* findAll: for retrieving list of existing records from database.
* update: for updating user field in database.
* register: for saving user object in user collection. 
* login: for checking user credentials are valid or not. If success, response is sent.
* reset: for storing new password in database.
*/class Usermodel{findOne(req){cov_14fuld21fz.f[0]++;cov_14fuld21fz.s[4]++;return new Promise((resolve,reject)=>{cov_14fuld21fz.f[1]++;cov_14fuld21fz.s[5]++;User.findOne(req).then(data=>{cov_14fuld21fz.f[2]++;cov_14fuld21fz.s[6]++;// logger.info(data); 
resolve(data);}).catch(err=>{cov_14fuld21fz.f[3]++;cov_14fuld21fz.s[7]++;logger.error(err);cov_14fuld21fz.s[8]++;reject(err);});});}update(req,res,callback){cov_14fuld21fz.f[4]++;cov_14fuld21fz.s[9]++;// logger.info(req,res);
User.updateOne(req,res).then(data=>{cov_14fuld21fz.f[5]++;cov_14fuld21fz.s[10]++;// logger.info(data);
callback(null,data);}).catch(err=>{cov_14fuld21fz.f[6]++;cov_14fuld21fz.s[11]++;callback(err);});}register(req,callback){cov_14fuld21fz.f[7]++;const user=(cov_14fuld21fz.s[12]++,new User({firstName:req.firstName,lastName:req.lastName,email:req.email,password:req.password}));cov_14fuld21fz.s[13]++;user.save((err,result)=>{cov_14fuld21fz.f[8]++;cov_14fuld21fz.s[14]++;if(err){cov_14fuld21fz.b[0][0]++;cov_14fuld21fz.s[15]++;callback(err);}else{cov_14fuld21fz.b[0][1]++;let response=(cov_14fuld21fz.s[16]++,{email:result.email,success:true});cov_14fuld21fz.s[17]++;callback(null,response);}});}login(req,callback){cov_14fuld21fz.f[9]++;let response=(cov_14fuld21fz.s[18]++,{id:req._id,firstName:req.firstName,email:req.email,message:'Success'});cov_14fuld21fz.s[19]++;callback(null,response);}reset(req){cov_14fuld21fz.f[10]++;cov_14fuld21fz.s[20]++;return new Promise((resolve,reject)=>{cov_14fuld21fz.f[11]++;cov_14fuld21fz.s[21]++;User.updateOne({_id:req._id},{password:req.password}).then(res=>{cov_14fuld21fz.f[12]++;cov_14fuld21fz.s[22]++;// logger.info(res);
resolve({message:"Password updated"});}).catch(err=>{cov_14fuld21fz.f[13]++;cov_14fuld21fz.s[23]++;reject(err);});});}}cov_14fuld21fz.s[24]++;module.exports=new Usermodel();