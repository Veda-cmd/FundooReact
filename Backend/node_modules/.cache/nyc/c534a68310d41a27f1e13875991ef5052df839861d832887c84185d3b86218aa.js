var cov_1trv08ypgl=function(){var path="/home/admin1/Desktop/FundooApp/Backend/controllers/noteController.js";var hash="6b956061e42afeaabd63207ed93775cdb72060b7";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/FundooApp/Backend/controllers/noteController.js",statementMap:{"0":{start:{line:12,column:20},end:{line:12,column:54}},"1":{start:{line:13,column:23},end:{line:13,column:46}},"2":{start:{line:14,column:13},end:{line:14,column:47}},"3":{start:{line:15,column:15},end:{line:15,column:48}},"4":{start:{line:25,column:8},end:{line:64,column:9}},"5":{start:{line:31,column:12},end:{line:31,column:75}},"6":{start:{line:32,column:12},end:{line:32,column:66}},"7":{start:{line:33,column:12},end:{line:33,column:78}},"8":{start:{line:34,column:12},end:{line:34,column:72}},"9":{start:{line:35,column:12},end:{line:35,column:66}},"10":{start:{line:36,column:27},end:{line:36,column:55}},"11":{start:{line:37,column:12},end:{line:40,column:13}},"12":{start:{line:39,column:16},end:{line:39,column:64}},"13":{start:{line:46,column:12},end:{line:56,column:15}},"14":{start:{line:48,column:16},end:{line:55,column:17}},"15":{start:{line:50,column:20},end:{line:50,column:46}},"16":{start:{line:54,column:20},end:{line:54,column:50}},"17":{start:{line:60,column:27},end:{line:60,column:29}},"18":{start:{line:61,column:12},end:{line:61,column:37}},"19":{start:{line:62,column:12},end:{line:62,column:34}},"20":{start:{line:63,column:12},end:{line:63,column:43}},"21":{start:{line:73,column:8},end:{line:108,column:9}},"22":{start:{line:79,column:12},end:{line:100,column:13}},"23":{start:{line:85,column:16},end:{line:95,column:19}},"24":{start:{line:87,column:20},end:{line:94,column:21}},"25":{start:{line:89,column:24},end:{line:89,column:50}},"26":{start:{line:93,column:24},end:{line:93,column:51}},"27":{start:{line:99,column:16},end:{line:99,column:80}},"28":{start:{line:104,column:27},end:{line:104,column:29}},"29":{start:{line:105,column:12},end:{line:105,column:37}},"30":{start:{line:106,column:12},end:{line:106,column:34}},"31":{start:{line:107,column:12},end:{line:107,column:43}},"32":{start:{line:118,column:8},end:{line:153,column:9}},"33":{start:{line:124,column:12},end:{line:145,column:13}},"34":{start:{line:130,column:16},end:{line:140,column:19}},"35":{start:{line:132,column:20},end:{line:139,column:21}},"36":{start:{line:134,column:24},end:{line:134,column:50}},"37":{start:{line:138,column:24},end:{line:138,column:53}},"38":{start:{line:144,column:16},end:{line:144,column:92}},"39":{start:{line:149,column:27},end:{line:149,column:29}},"40":{start:{line:150,column:12},end:{line:150,column:37}},"41":{start:{line:151,column:12},end:{line:151,column:34}},"42":{start:{line:152,column:12},end:{line:152,column:43}},"43":{start:{line:159,column:0},end:{line:159,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:23,column:4},end:{line:23,column:5}},loc:{start:{line:24,column:4},end:{line:65,column:5}},line:24},"1":{name:"(anonymous_1)",decl:{start:{line:46,column:37},end:{line:46,column:38}},loc:{start:{line:47,column:12},end:{line:56,column:13}},line:47},"2":{name:"(anonymous_2)",decl:{start:{line:71,column:4},end:{line:71,column:5}},loc:{start:{line:72,column:4},end:{line:110,column:5}},line:72},"3":{name:"(anonymous_3)",decl:{start:{line:85,column:47},end:{line:85,column:48}},loc:{start:{line:86,column:16},end:{line:95,column:17}},line:86},"4":{name:"(anonymous_4)",decl:{start:{line:116,column:4},end:{line:116,column:5}},loc:{start:{line:117,column:4},end:{line:155,column:5}},line:117},"5":{name:"(anonymous_5)",decl:{start:{line:130,column:44},end:{line:130,column:45}},loc:{start:{line:131,column:16},end:{line:140,column:17}},line:131}},branchMap:{"0":{loc:{start:{line:37,column:12},end:{line:40,column:13}},type:"if",locations:[{start:{line:37,column:12},end:{line:40,column:13}},{start:{line:37,column:12},end:{line:40,column:13}}],line:37},"1":{loc:{start:{line:48,column:16},end:{line:55,column:17}},type:"if",locations:[{start:{line:48,column:16},end:{line:55,column:17}},{start:{line:48,column:16},end:{line:55,column:17}}],line:48},"2":{loc:{start:{line:79,column:12},end:{line:100,column:13}},type:"if",locations:[{start:{line:79,column:12},end:{line:100,column:13}},{start:{line:79,column:12},end:{line:100,column:13}}],line:79},"3":{loc:{start:{line:79,column:15},end:{line:79,column:93}},type:"binary-expr",locations:[{start:{line:79,column:15},end:{line:79,column:37}},{start:{line:79,column:41},end:{line:79,column:66}},{start:{line:79,column:70},end:{line:79,column:93}}],line:79},"4":{loc:{start:{line:87,column:20},end:{line:94,column:21}},type:"if",locations:[{start:{line:87,column:20},end:{line:94,column:21}},{start:{line:87,column:20},end:{line:94,column:21}}],line:87},"5":{loc:{start:{line:124,column:12},end:{line:145,column:13}},type:"if",locations:[{start:{line:124,column:12},end:{line:145,column:13}},{start:{line:124,column:12},end:{line:145,column:13}}],line:124},"6":{loc:{start:{line:124,column:15},end:{line:124,column:112}},type:"binary-expr",locations:[{start:{line:124,column:15},end:{line:124,column:34}},{start:{line:124,column:38},end:{line:124,column:63}},{start:{line:124,column:67},end:{line:124,column:89}},{start:{line:124,column:93},end:{line:124,column:112}}],line:124},"7":{loc:{start:{line:132,column:20},end:{line:139,column:21}},type:"if",locations:[{start:{line:132,column:20},end:{line:139,column:21}},{start:{line:132,column:20},end:{line:139,column:21}}],line:132}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0],"7":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"6b956061e42afeaabd63207ed93775cdb72060b7"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/**
* @description: 
* @file: noteController.js
* @author: Vedant Nare
* @version: 1.0
*/ /**
*@description Dependencies are installed for execution. 
*/const noteService=(cov_1trv08ypgl.s[0]++,require('../services/noteService'));const authentication=(cov_1trv08ypgl.s[1]++,require('../auth/auth'));const mail=(cov_1trv08ypgl.s[2]++,require('../services/mailService'));const logger=(cov_1trv08ypgl.s[3]++,require('../services/logService'));class NoteController{/**
    *@description addNote API is used for creation of new note.
    */async addNote(req,res){cov_1trv08ypgl.f[0]++;cov_1trv08ypgl.s[4]++;try{cov_1trv08ypgl.s[5]++;/**
            * @description express-validator is used for validation of input. 
            */req.check('note_id','Note id should have a number').notEmpty();cov_1trv08ypgl.s[6]++;req.check('title','Title cannot be empty').notEmpty();cov_1trv08ypgl.s[7]++;req.check('description','Description cannot be empty').notEmpty();cov_1trv08ypgl.s[8]++;req.check('reminder','Reminder cannot be empty').notEmpty();cov_1trv08ypgl.s[9]++;req.check('color','Color cannot be empty').notEmpty();const errors=(cov_1trv08ypgl.s[10]++,await req.validationErrors());cov_1trv08ypgl.s[11]++;if(errors){cov_1trv08ypgl.b[0][0]++;cov_1trv08ypgl.s[12]++;return res.status(422).json({errors:errors});}else{cov_1trv08ypgl.b[0][1]++;}/**
            *@description note Service is called. If success, positive response is sent to client.
            */cov_1trv08ypgl.s[13]++;noteService.add(req.body,(err,success)=>{cov_1trv08ypgl.f[1]++;cov_1trv08ypgl.s[14]++;if(err){cov_1trv08ypgl.b[1][0]++;cov_1trv08ypgl.s[15]++;res.status(422).send(err);}else{cov_1trv08ypgl.b[1][1]++;cov_1trv08ypgl.s[16]++;res.status(200).send(success);}});}catch(err){let response=(cov_1trv08ypgl.s[17]++,{});cov_1trv08ypgl.s[18]++;response.success=false;cov_1trv08ypgl.s[19]++;response.data=error;cov_1trv08ypgl.s[20]++;res.status(404).send(response);}}/**
    *@description getNote API is used for retrieving notes through params.
    */getNotes(req,res){cov_1trv08ypgl.f[2]++;cov_1trv08ypgl.s[21]++;try{cov_1trv08ypgl.s[22]++;/**
            *@description If params are not present in req.query, it goes to else part.
            */if((cov_1trv08ypgl.b[3][0]++,'isTrash'in req.query)||(cov_1trv08ypgl.b[3][1]++,'isArchived'in req.query)||(cov_1trv08ypgl.b[3][2]++,'reminder'in req.query)){cov_1trv08ypgl.b[2][0]++;cov_1trv08ypgl.s[23]++;/**
                *@description note Service is called. If success, positive response is sent to client.
                */noteService.getNotes(req.query,(err,data)=>{cov_1trv08ypgl.f[3]++;cov_1trv08ypgl.s[24]++;if(err){cov_1trv08ypgl.b[4][0]++;cov_1trv08ypgl.s[25]++;res.status(422).send(err);}else{cov_1trv08ypgl.b[4][1]++;cov_1trv08ypgl.s[26]++;res.status(200).send(data);}});}else{cov_1trv08ypgl.b[2][1]++;cov_1trv08ypgl.s[27]++;return res.status(422).send({message:"No params found in url"});}}catch(error){let response=(cov_1trv08ypgl.s[28]++,{});cov_1trv08ypgl.s[29]++;response.success=false;cov_1trv08ypgl.s[30]++;response.data=error;cov_1trv08ypgl.s[31]++;res.status(404).send(response);}}/**
    *@description searchNotes API is used for searching notes.
    */searchNotes(req,res){cov_1trv08ypgl.f[4]++;cov_1trv08ypgl.s[32]++;try{cov_1trv08ypgl.s[33]++;/**
            *@description If params are not present in req.body, it goes to else part.
            */if((cov_1trv08ypgl.b[6][0]++,'title'in req.body)||(cov_1trv08ypgl.b[6][1]++,'description'in req.body)||(cov_1trv08ypgl.b[6][2]++,'reminder'in req.body)||(cov_1trv08ypgl.b[6][3]++,'color'in req.body)){cov_1trv08ypgl.b[5][0]++;cov_1trv08ypgl.s[34]++;/**
                *@description note Service is called. If success, positive response is sent to client.
                */noteService.search(req.body,(err,result)=>{cov_1trv08ypgl.f[5]++;cov_1trv08ypgl.s[35]++;if(err){cov_1trv08ypgl.b[7][0]++;cov_1trv08ypgl.s[36]++;res.status(422).send(err);}else{cov_1trv08ypgl.b[7][1]++;cov_1trv08ypgl.s[37]++;res.status(200).send(result);}});}else{cov_1trv08ypgl.b[5][1]++;cov_1trv08ypgl.s[38]++;return res.status(422).send({message:"No params found in body of request"});}}catch(error){let response=(cov_1trv08ypgl.s[39]++,{});cov_1trv08ypgl.s[40]++;response.success=false;cov_1trv08ypgl.s[41]++;response.data=error;cov_1trv08ypgl.s[42]++;res.status(404).send(response);}}}cov_1trv08ypgl.s[43]++;module.exports=new NoteController();