var cov_2pwhntwywl=function(){var path="/home/admin1/Desktop/FundooApp/Backend/controllers/userController.js";var hash="692214198fa0830ca4df04362e5e078226e0717c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/FundooApp/Backend/controllers/userController.js",statementMap:{"0":{start:{line:12,column:20},end:{line:12,column:54}},"1":{start:{line:13,column:18},end:{line:13,column:48}},"2":{start:{line:14,column:19},end:{line:14,column:52}},"3":{start:{line:15,column:23},end:{line:15,column:46}},"4":{start:{line:16,column:13},end:{line:16,column:47}},"5":{start:{line:17,column:14},end:{line:17,column:49}},"6":{start:{line:18,column:15},end:{line:18,column:48}},"7":{start:{line:29,column:8},end:{line:93,column:9}},"8":{start:{line:35,column:12},end:{line:35,column:98}},"9":{start:{line:36,column:12},end:{line:36,column:73}},"10":{start:{line:37,column:12},end:{line:37,column:57}},"11":{start:{line:38,column:12},end:{line:38,column:85}},"12":{start:{line:39,column:27},end:{line:39,column:55}},"13":{start:{line:40,column:12},end:{line:43,column:13}},"14":{start:{line:42,column:16},end:{line:42,column:64}},"15":{start:{line:50,column:12},end:{line:85,column:14}},"16":{start:{line:54,column:16},end:{line:57,column:17}},"17":{start:{line:64,column:16},end:{line:80,column:19}},"18":{start:{line:67,column:20},end:{line:79,column:21}},"19":{start:{line:69,column:24},end:{line:69,column:50}},"20":{start:{line:77,column:24},end:{line:77,column:74}},"21":{start:{line:78,column:24},end:{line:78,column:52}},"22":{start:{line:84,column:16},end:{line:84,column:42}},"23":{start:{line:89,column:27},end:{line:89,column:29}},"24":{start:{line:90,column:12},end:{line:90,column:37}},"25":{start:{line:91,column:12},end:{line:91,column:34}},"26":{start:{line:92,column:12},end:{line:92,column:43}},"27":{start:{line:102,column:8},end:{line:165,column:9}},"28":{start:{line:108,column:12},end:{line:108,column:72}},"29":{start:{line:109,column:12},end:{line:109,column:89}},"30":{start:{line:110,column:27},end:{line:110,column:55}},"31":{start:{line:111,column:12},end:{line:114,column:13}},"32":{start:{line:113,column:16},end:{line:113,column:64}},"33":{start:{line:120,column:12},end:{line:157,column:15}},"34":{start:{line:122,column:16},end:{line:156,column:17}},"35":{start:{line:124,column:20},end:{line:124,column:46}},"36":{start:{line:128,column:30},end:{line:128,column:46}},"37":{start:{line:129,column:34},end:{line:132,column:21}},"38":{start:{line:134,column:32},end:{line:134,column:69}},"39":{start:{line:136,column:20},end:{line:146,column:23}},"40":{start:{line:138,column:24},end:{line:145,column:25}},"41":{start:{line:140,column:28},end:{line:140,column:48}},"42":{start:{line:144,column:28},end:{line:144,column:49}},"43":{start:{line:148,column:33},end:{line:153,column:21}},"44":{start:{line:155,column:20},end:{line:155,column:49}},"45":{start:{line:161,column:27},end:{line:161,column:29}},"46":{start:{line:162,column:12},end:{line:162,column:37}},"47":{start:{line:163,column:12},end:{line:163,column:34}},"48":{start:{line:164,column:12},end:{line:164,column:43}},"49":{start:{line:174,column:8},end:{line:237,column:9}},"50":{start:{line:180,column:12},end:{line:180,column:61}},"51":{start:{line:181,column:27},end:{line:181,column:55}},"52":{start:{line:183,column:12},end:{line:184,column:64}},"53":{start:{line:184,column:16},end:{line:184,column:64}},"54":{start:{line:186,column:12},end:{line:229,column:14}},"55":{start:{line:193,column:25},end:{line:193,column:40}},"56":{start:{line:194,column:30},end:{line:194,column:59}},"57":{start:{line:195,column:28},end:{line:195,column:65}},"58":{start:{line:201,column:16},end:{line:211,column:19}},"59":{start:{line:203,column:20},end:{line:210,column:21}},"60":{start:{line:205,column:24},end:{line:205,column:44}},"61":{start:{line:209,column:24},end:{line:209,column:46}},"62":{start:{line:213,column:16},end:{line:224,column:19}},"63":{start:{line:216,column:20},end:{line:223,column:21}},"64":{start:{line:217,column:24},end:{line:217,column:50}},"65":{start:{line:220,column:34},end:{line:220,column:73}},"66":{start:{line:221,column:24},end:{line:221,column:60}},"67":{start:{line:222,column:24},end:{line:222,column:51}},"68":{start:{line:228,column:16},end:{line:228,column:42}},"69":{start:{line:233,column:27},end:{line:233,column:29}},"70":{start:{line:234,column:12},end:{line:234,column:37}},"71":{start:{line:235,column:12},end:{line:235,column:34}},"72":{start:{line:236,column:12},end:{line:236,column:43}},"73":{start:{line:246,column:8},end:{line:283,column:9}},"74":{start:{line:252,column:12},end:{line:252,column:89}},"75":{start:{line:253,column:27},end:{line:253,column:55}},"76":{start:{line:255,column:12},end:{line:258,column:13}},"77":{start:{line:257,column:16},end:{line:257,column:64}},"78":{start:{line:260,column:24},end:{line:263,column:13}},"79":{start:{line:264,column:12},end:{line:275,column:14}},"80":{start:{line:267,column:16},end:{line:267,column:43}},"81":{start:{line:271,column:16},end:{line:271,column:33}},"82":{start:{line:273,column:16},end:{line:273,column:34}},"83":{start:{line:274,column:16},end:{line:274,column:42}},"84":{start:{line:279,column:27},end:{line:279,column:29}},"85":{start:{line:280,column:12},end:{line:280,column:37}},"86":{start:{line:281,column:12},end:{line:281,column:34}},"87":{start:{line:282,column:12},end:{line:282,column:43}},"88":{start:{line:292,column:8},end:{line:308,column:9}},"89":{start:{line:294,column:12},end:{line:300,column:14}},"90":{start:{line:296,column:16},end:{line:299,column:47}},"91":{start:{line:297,column:20},end:{line:297,column:46}},"92":{start:{line:299,column:20},end:{line:299,column:47}},"93":{start:{line:304,column:27},end:{line:304,column:29}},"94":{start:{line:305,column:12},end:{line:305,column:37}},"95":{start:{line:306,column:12},end:{line:306,column:34}},"96":{start:{line:307,column:12},end:{line:307,column:43}},"97":{start:{line:318,column:8},end:{line:318,column:30}},"98":{start:{line:320,column:8},end:{line:349,column:9}},"99":{start:{line:326,column:12},end:{line:344,column:13}},"100":{start:{line:328,column:16},end:{line:328,column:88}},"101":{start:{line:332,column:16},end:{line:343,column:19}},"102":{start:{line:334,column:20},end:{line:342,column:21}},"103":{start:{line:336,column:24},end:{line:336,column:42}},"104":{start:{line:337,column:24},end:{line:337,column:50}},"105":{start:{line:341,column:24},end:{line:341,column:51}},"106":{start:{line:348,column:12},end:{line:348,column:40}},"107":{start:{line:353,column:0},end:{line:353,column:36}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:27,column:4},end:{line:27,column:5}},loc:{start:{line:28,column:4},end:{line:94,column:5}},line:28},"1":{name:"(anonymous_1)",decl:{start:{line:51,column:18},end:{line:51,column:19}},loc:{start:{line:52,column:12},end:{line:81,column:13}},line:52},"2":{name:"(anonymous_2)",decl:{start:{line:64,column:46},end:{line:64,column:47}},loc:{start:{line:65,column:16},end:{line:80,column:17}},line:65},"3":{name:"(anonymous_3)",decl:{start:{line:82,column:19},end:{line:82,column:20}},loc:{start:{line:83,column:12},end:{line:85,column:13}},line:83},"4":{name:"(anonymous_4)",decl:{start:{line:100,column:4},end:{line:100,column:5}},loc:{start:{line:101,column:4},end:{line:166,column:5}},line:101},"5":{name:"(anonymous_5)",decl:{start:{line:120,column:39},end:{line:120,column:40}},loc:{start:{line:121,column:12},end:{line:157,column:13}},line:121},"6":{name:"(anonymous_6)",decl:{start:{line:136,column:40},end:{line:136,column:41}},loc:{start:{line:137,column:20},end:{line:146,column:21}},line:137},"7":{name:"(anonymous_7)",decl:{start:{line:172,column:4},end:{line:172,column:5}},loc:{start:{line:173,column:4},end:{line:238,column:5}},line:173},"8":{name:"(anonymous_8)",decl:{start:{line:187,column:18},end:{line:187,column:19}},loc:{start:{line:188,column:12},end:{line:225,column:13}},line:188},"9":{name:"(anonymous_9)",decl:{start:{line:201,column:35},end:{line:201,column:36}},loc:{start:{line:202,column:16},end:{line:211,column:17}},line:202},"10":{name:"(anonymous_10)",decl:{start:{line:213,column:73},end:{line:213,column:74}},loc:{start:{line:214,column:16},end:{line:224,column:17}},line:214},"11":{name:"(anonymous_11)",decl:{start:{line:226,column:19},end:{line:226,column:20}},loc:{start:{line:227,column:12},end:{line:229,column:13}},line:227},"12":{name:"(anonymous_12)",decl:{start:{line:244,column:4},end:{line:244,column:5}},loc:{start:{line:245,column:4},end:{line:284,column:5}},line:245},"13":{name:"(anonymous_13)",decl:{start:{line:265,column:18},end:{line:265,column:19}},loc:{start:{line:266,column:12},end:{line:268,column:13}},line:266},"14":{name:"(anonymous_14)",decl:{start:{line:269,column:19},end:{line:269,column:20}},loc:{start:{line:270,column:12},end:{line:275,column:13}},line:270},"15":{name:"(anonymous_15)",decl:{start:{line:290,column:4},end:{line:290,column:5}},loc:{start:{line:291,column:4},end:{line:309,column:5}},line:291},"16":{name:"(anonymous_16)",decl:{start:{line:294,column:37},end:{line:294,column:38}},loc:{start:{line:295,column:12},end:{line:300,column:13}},line:295},"17":{name:"(anonymous_17)",decl:{start:{line:316,column:4},end:{line:316,column:5}},loc:{start:{line:317,column:4},end:{line:350,column:5}},line:317},"18":{name:"(anonymous_18)",decl:{start:{line:332,column:88},end:{line:332,column:89}},loc:{start:{line:333,column:16},end:{line:343,column:17}},line:333}},branchMap:{"0":{loc:{start:{line:40,column:12},end:{line:43,column:13}},type:"if",locations:[{start:{line:40,column:12},end:{line:43,column:13}},{start:{line:40,column:12},end:{line:43,column:13}}],line:40},"1":{loc:{start:{line:67,column:20},end:{line:79,column:21}},type:"if",locations:[{start:{line:67,column:20},end:{line:79,column:21}},{start:{line:67,column:20},end:{line:79,column:21}}],line:67},"2":{loc:{start:{line:111,column:12},end:{line:114,column:13}},type:"if",locations:[{start:{line:111,column:12},end:{line:114,column:13}},{start:{line:111,column:12},end:{line:114,column:13}}],line:111},"3":{loc:{start:{line:122,column:16},end:{line:156,column:17}},type:"if",locations:[{start:{line:122,column:16},end:{line:156,column:17}},{start:{line:122,column:16},end:{line:156,column:17}}],line:122},"4":{loc:{start:{line:138,column:24},end:{line:145,column:25}},type:"if",locations:[{start:{line:138,column:24},end:{line:145,column:25}},{start:{line:138,column:24},end:{line:145,column:25}}],line:138},"5":{loc:{start:{line:183,column:12},end:{line:184,column:64}},type:"if",locations:[{start:{line:183,column:12},end:{line:184,column:64}},{start:{line:183,column:12},end:{line:184,column:64}}],line:183},"6":{loc:{start:{line:203,column:20},end:{line:210,column:21}},type:"if",locations:[{start:{line:203,column:20},end:{line:210,column:21}},{start:{line:203,column:20},end:{line:210,column:21}}],line:203},"7":{loc:{start:{line:216,column:20},end:{line:223,column:21}},type:"if",locations:[{start:{line:216,column:20},end:{line:223,column:21}},{start:{line:216,column:20},end:{line:223,column:21}}],line:216},"8":{loc:{start:{line:255,column:12},end:{line:258,column:13}},type:"if",locations:[{start:{line:255,column:12},end:{line:258,column:13}},{start:{line:255,column:12},end:{line:258,column:13}}],line:255},"9":{loc:{start:{line:296,column:16},end:{line:299,column:47}},type:"if",locations:[{start:{line:296,column:16},end:{line:299,column:47}},{start:{line:296,column:16},end:{line:299,column:47}}],line:296},"10":{loc:{start:{line:326,column:12},end:{line:344,column:13}},type:"if",locations:[{start:{line:326,column:12},end:{line:344,column:13}},{start:{line:326,column:12},end:{line:344,column:13}}],line:326},"11":{loc:{start:{line:326,column:15},end:{line:326,column:70}},type:"binary-expr",locations:[{start:{line:326,column:15},end:{line:326,column:36}},{start:{line:326,column:40},end:{line:326,column:70}}],line:326},"12":{loc:{start:{line:334,column:20},end:{line:342,column:21}},type:"if",locations:[{start:{line:334,column:20},end:{line:342,column:21}},{start:{line:334,column:20},end:{line:342,column:21}}],line:334}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"692214198fa0830ca4df04362e5e078226e0717c"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/**
* @description: 
* @file: userController.js
* @author: Vedant Nare
* @version: 1.0
*/ /**
*@description Dependencies are installed for execution. 
*/const userService=(cov_2pwhntwywl.s[0]++,require('../services/userService'));const userModel=(cov_2pwhntwywl.s[1]++,require('../models/userModel'));const urlService=(cov_2pwhntwywl.s[2]++,require('../services/urlService'));const authentication=(cov_2pwhntwywl.s[3]++,require('../auth/auth'));const mail=(cov_2pwhntwywl.s[4]++,require('../services/mailService'));const cache=(cov_2pwhntwywl.s[5]++,require('../services/cacheService'));const logger=(cov_2pwhntwywl.s[6]++,require('../services/logService'));class Usercontroller{/**
    *@description Register API is used for user registration. 
    */async register(req,res){cov_2pwhntwywl.f[0]++;cov_2pwhntwywl.s[7]++;try{cov_2pwhntwywl.s[8]++;/**
            * @description express-validator is used for validation of input. 
            */req.check('firstName','Length of name should be min 3 characters').isLength({min:3});cov_2pwhntwywl.s[9]++;req.check('lastName','Last Name cannot be empty').notEmpty();cov_2pwhntwywl.s[10]++;req.check('email','Invalid email').isEmail();cov_2pwhntwywl.s[11]++;req.check('password','Invalid password').notEmpty().isLength({min:6});const errors=(cov_2pwhntwywl.s[12]++,await req.validationErrors());cov_2pwhntwywl.s[13]++;if(errors){cov_2pwhntwywl.b[0][0]++;cov_2pwhntwywl.s[14]++;return res.status(422).json({errors:errors});}else{cov_2pwhntwywl.b[0][1]++;}/**
            *@description Register service is called. If success, it returns data which contains
            *email of the user and it sends a verification link to the user using short url.
            */cov_2pwhntwywl.s[15]++;userService.register(req.body).then(data=>{cov_2pwhntwywl.f[1]++;let request=(cov_2pwhntwywl.s[16]++,{email:data.email,url:'http://localhost:5000/'});/**
                * @description url shortener service is called. If success, it sends a mail to
                * the user using Nodemailer.
                */cov_2pwhntwywl.s[17]++;urlService.shortenUrl(request,(err,result)=>{cov_2pwhntwywl.f[2]++;cov_2pwhntwywl.s[18]++;if(err){cov_2pwhntwywl.b[1][0]++;cov_2pwhntwywl.s[19]++;res.status(422).send(err);}else{cov_2pwhntwywl.b[1][1]++;cov_2pwhntwywl.s[20]++;/**
                        * @description Verification email is sent using short url. 
                        */mail.sendVerifyLink(result.shortUrl,result.email);cov_2pwhntwywl.s[21]++;res.status(200).send(result);}});}).catch(err=>{cov_2pwhntwywl.f[3]++;cov_2pwhntwywl.s[22]++;res.status(422).send(err);});}catch(error){let response=(cov_2pwhntwywl.s[23]++,{});cov_2pwhntwywl.s[24]++;response.success=false;cov_2pwhntwywl.s[25]++;response.data=error;cov_2pwhntwywl.s[26]++;res.status(404).send(response);}}/**
    *@description Login API is used for user login. 
    */async login(req,res){cov_2pwhntwywl.f[4]++;cov_2pwhntwywl.s[27]++;try{cov_2pwhntwywl.s[28]++;/**
            * @description express-validator is used for validation of input. 
            */req.checkBody('email','Invalid email').notEmpty().isEmail();cov_2pwhntwywl.s[29]++;req.checkBody('password','Invalid password').notEmpty().isLength({min:6});const errors=(cov_2pwhntwywl.s[30]++,await req.validationErrors());cov_2pwhntwywl.s[31]++;if(errors){cov_2pwhntwywl.b[2][0]++;cov_2pwhntwywl.s[32]++;return res.status(422).json({errors:errors});}else{cov_2pwhntwywl.b[2][1]++;}/**
            *@description Login service is called.If success, response is sent using status 200.
            */cov_2pwhntwywl.s[33]++;userService.login(req.body,(err,data)=>{cov_2pwhntwywl.f[5]++;cov_2pwhntwywl.s[34]++;if(err){cov_2pwhntwywl.b[3][0]++;cov_2pwhntwywl.s[35]++;res.status(422).send(err);}else{cov_2pwhntwywl.b[3][1]++;let key=(cov_2pwhntwywl.s[36]++,data.id+'upload');let payload=(cov_2pwhntwywl.s[37]++,{id:data.id,email:data.email});let token=(cov_2pwhntwywl.s[38]++,authentication.generateToken(payload));cov_2pwhntwywl.s[39]++;cache.set(key,token,(error,success)=>{cov_2pwhntwywl.f[6]++;cov_2pwhntwywl.s[40]++;if(error){cov_2pwhntwywl.b[4][0]++;cov_2pwhntwywl.s[41]++;logger.error(error);}else{cov_2pwhntwywl.b[4][1]++;cov_2pwhntwywl.s[42]++;logger.info(success);}});let result=(cov_2pwhntwywl.s[43]++,{response:{data:data.message},session:token});cov_2pwhntwywl.s[44]++;res.status(200).send(result);}});}catch(error){let response=(cov_2pwhntwywl.s[45]++,{});cov_2pwhntwywl.s[46]++;response.success=false;cov_2pwhntwywl.s[47]++;response.data=error;cov_2pwhntwywl.s[48]++;res.status(404).send(response);}}/**
    *@description Forgot Password API is used for resetting user password. 
    */async forgot(req,res){cov_2pwhntwywl.f[7]++;cov_2pwhntwywl.s[49]++;try{cov_2pwhntwywl.s[50]++;/**
            * @description express-validator is used for validation of input. 
            */req.checkBody('email','Invalid email').isEmail();const errors=(cov_2pwhntwywl.s[51]++,await req.validationErrors());cov_2pwhntwywl.s[52]++;if(errors){cov_2pwhntwywl.b[5][0]++;cov_2pwhntwywl.s[53]++;return res.status(422).json({errors:errors});}else{cov_2pwhntwywl.b[5][1]++;}cov_2pwhntwywl.s[54]++;userService.forgot(req.body).then(data=>{cov_2pwhntwywl.f[8]++;/**
                * @description Token is generated and stored in a variable.
                */let id=(cov_2pwhntwywl.s[55]++,data.id+'reset');let payload=(cov_2pwhntwywl.s[56]++,{email:data.email,id:data.id});let token=(cov_2pwhntwywl.s[57]++,authentication.generateToken(payload));/**
                * @description Redis set method is used for storing forgot token.
                */cov_2pwhntwywl.s[58]++;cache.set(id,token,(error,response)=>{cov_2pwhntwywl.f[9]++;cov_2pwhntwywl.s[59]++;if(error){cov_2pwhntwywl.b[6][0]++;cov_2pwhntwywl.s[60]++;logger.error(error);}else{cov_2pwhntwywl.b[6][1]++;cov_2pwhntwywl.s[61]++;logger.info(response);}});cov_2pwhntwywl.s[62]++;userModel.update({email:data.email},{forgot_token:token},(err,result)=>{cov_2pwhntwywl.f[10]++;cov_2pwhntwywl.s[63]++;// logger.info('Err',err,'Result',result)
if(err){cov_2pwhntwywl.b[7][0]++;cov_2pwhntwywl.s[64]++;res.status(422).send(err);}else{cov_2pwhntwywl.b[7][1]++;let url=(cov_2pwhntwywl.s[65]++,'http://localhost:5000/#!/reset/'+token);cov_2pwhntwywl.s[66]++;mail.sendForgotLink(url,data.email);cov_2pwhntwywl.s[67]++;res.status(200).send(data);}});}).catch(err=>{cov_2pwhntwywl.f[11]++;cov_2pwhntwywl.s[68]++;res.status(422).send(err);});}catch(error){let response=(cov_2pwhntwywl.s[69]++,{});cov_2pwhntwywl.s[70]++;response.success=false;cov_2pwhntwywl.s[71]++;response.data=error;cov_2pwhntwywl.s[72]++;res.status(404).send(response);}}/**
    *@description Reset Password API is used for storing new password. 
    */async reset(req,res){cov_2pwhntwywl.f[12]++;cov_2pwhntwywl.s[73]++;try{cov_2pwhntwywl.s[74]++;/**
            * @description express-validator is used for validation of input. 
            */req.check('new_password','Invalid password').notEmpty().isLength({min:6});const errors=(cov_2pwhntwywl.s[75]++,await req.validationErrors());cov_2pwhntwywl.s[76]++;if(errors){cov_2pwhntwywl.b[8][0]++;cov_2pwhntwywl.s[77]++;return res.status(422).json({errors:errors});}else{cov_2pwhntwywl.b[8][1]++;}let request=(cov_2pwhntwywl.s[78]++,{token:req.headers.token,new_password:req.body.new_password});cov_2pwhntwywl.s[79]++;userService.reset(request).then(data=>{cov_2pwhntwywl.f[13]++;cov_2pwhntwywl.s[80]++;res.status(200).send(data);}).catch(err=>{cov_2pwhntwywl.f[14]++;cov_2pwhntwywl.s[81]++;console.log(err);cov_2pwhntwywl.s[82]++;logger.error(err);cov_2pwhntwywl.s[83]++;res.status(422).send(err);});}catch(error){let response=(cov_2pwhntwywl.s[84]++,{});cov_2pwhntwywl.s[85]++;response.success=false;cov_2pwhntwywl.s[86]++;response.data=error;cov_2pwhntwywl.s[87]++;res.status(404).send(response);}}/**
    *@description Email verification API is used for validation of user email.
    */async verifyMail(req,res){cov_2pwhntwywl.f[15]++;cov_2pwhntwywl.s[88]++;try{cov_2pwhntwywl.s[89]++;urlService.verifyUrl(req,(err,data)=>{cov_2pwhntwywl.f[16]++;cov_2pwhntwywl.s[90]++;if(err){cov_2pwhntwywl.b[9][0]++;cov_2pwhntwywl.s[91]++;res.status(422).send(err);}else{cov_2pwhntwywl.b[9][1]++;cov_2pwhntwywl.s[92]++;res.status(200).send(data);}});}catch(error){let response=(cov_2pwhntwywl.s[93]++,{});cov_2pwhntwywl.s[94]++;response.success=false;cov_2pwhntwywl.s[95]++;response.data=error;cov_2pwhntwywl.s[96]++;res.status(404).send(response);}}/**
    * @description Upload API is used for uploading images to AWS S3. If success, image Url is 
    * stored in database corresponding to the particular user.
    */async upload(req,res){cov_2pwhntwywl.f[17]++;cov_2pwhntwywl.s[97]++;console.log(req.file);cov_2pwhntwywl.s[98]++;try{cov_2pwhntwywl.s[99]++;/**
            * @description If file content/body of request is undefined, error message is sent out.
            */if((cov_2pwhntwywl.b[11][0]++,req.file==undefined)||(cov_2pwhntwywl.b[11][1]++,req.decoded.email==undefined)){cov_2pwhntwywl.b[10][0]++;cov_2pwhntwywl.s[100]++;return res.status(422).send({'message':'No location URL/params found'});}else{cov_2pwhntwywl.b[10][1]++;cov_2pwhntwywl.s[101]++;userModel.update({email:req.decoded.email},{imageUrl:req.file.location},(err,data)=>{cov_2pwhntwywl.f[18]++;cov_2pwhntwywl.s[102]++;if(err){cov_2pwhntwywl.b[12][0]++;cov_2pwhntwywl.s[103]++;logger.error(err);cov_2pwhntwywl.s[104]++;res.status(422).send(err);}else{cov_2pwhntwywl.b[12][1]++;cov_2pwhntwywl.s[105]++;res.status(200).send(data);}});}}catch(error){cov_2pwhntwywl.s[106]++;res.status(422).send(error);}}}cov_2pwhntwywl.s[107]++;module.exports=new Usercontroller();