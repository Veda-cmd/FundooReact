var cov_966g5z81u=function(){var path="/home/admin1/Desktop/FundooApp/Backend/models/noteModel.js";var hash="5fd58acc1f388ab30b68ff3cd3228f19ccb5cf44";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/FundooApp/Backend/models/noteModel.js",statementMap:{"0":{start:{line:12,column:17},end:{line:12,column:36}},"1":{start:{line:13,column:15},end:{line:13,column:48}},"2":{start:{line:19,column:19},end:{line:48,column:2}},"3":{start:{line:54,column:13},end:{line:54,column:46}},"4":{start:{line:68,column:8},end:{line:81,column:11}},"5":{start:{line:70,column:12},end:{line:80,column:15}},"6":{start:{line:74,column:16},end:{line:74,column:30}},"7":{start:{line:78,column:16},end:{line:78,column:34}},"8":{start:{line:79,column:16},end:{line:79,column:28}},"9":{start:{line:86,column:8},end:{line:103,column:11}},"10":{start:{line:88,column:12},end:{line:102,column:13}},"11":{start:{line:90,column:16},end:{line:90,column:30}},"12":{start:{line:94,column:16},end:{line:101,column:17}},"13":{start:{line:96,column:20},end:{line:96,column:40}},"14":{start:{line:100,column:20},end:{line:100,column:56}},"15":{start:{line:110,column:8},end:{line:119,column:11}},"16":{start:{line:114,column:12},end:{line:114,column:32}},"17":{start:{line:118,column:12},end:{line:118,column:26}},"18":{start:{line:125,column:21},end:{line:133,column:10}},"19":{start:{line:134,column:8},end:{line:149,column:11}},"20":{start:{line:136,column:12},end:{line:148,column:13}},"21":{start:{line:138,column:16},end:{line:138,column:30}},"22":{start:{line:142,column:25},end:{line:146,column:17}},"23":{start:{line:147,column:16},end:{line:147,column:35}},"24":{start:{line:154,column:0},end:{line:154,column:33}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:66,column:4},end:{line:66,column:5}},loc:{start:{line:67,column:4},end:{line:82,column:5}},line:67},"1":{name:"(anonymous_1)",decl:{start:{line:68,column:27},end:{line:68,column:28}},loc:{start:{line:69,column:8},end:{line:81,column:9}},line:69},"2":{name:"(anonymous_2)",decl:{start:{line:71,column:18},end:{line:71,column:19}},loc:{start:{line:72,column:12},end:{line:75,column:13}},line:72},"3":{name:"(anonymous_3)",decl:{start:{line:76,column:19},end:{line:76,column:20}},loc:{start:{line:77,column:12},end:{line:80,column:13}},line:77},"4":{name:"(anonymous_4)",decl:{start:{line:84,column:4},end:{line:84,column:5}},loc:{start:{line:85,column:4},end:{line:104,column:5}},line:85},"5":{name:"(anonymous_5)",decl:{start:{line:86,column:22},end:{line:86,column:23}},loc:{start:{line:87,column:8},end:{line:103,column:9}},line:87},"6":{name:"(anonymous_6)",decl:{start:{line:106,column:4},end:{line:106,column:5}},loc:{start:{line:107,column:4},end:{line:121,column:5}},line:107},"7":{name:"(anonymous_7)",decl:{start:{line:111,column:14},end:{line:111,column:15}},loc:{start:{line:112,column:8},end:{line:115,column:9}},line:112},"8":{name:"(anonymous_8)",decl:{start:{line:116,column:15},end:{line:116,column:16}},loc:{start:{line:117,column:8},end:{line:119,column:9}},line:117},"9":{name:"(anonymous_9)",decl:{start:{line:123,column:4},end:{line:123,column:5}},loc:{start:{line:124,column:4},end:{line:150,column:5}},line:124},"10":{name:"(anonymous_10)",decl:{start:{line:134,column:18},end:{line:134,column:19}},loc:{start:{line:135,column:8},end:{line:149,column:9}},line:135}},branchMap:{"0":{loc:{start:{line:88,column:12},end:{line:102,column:13}},type:"if",locations:[{start:{line:88,column:12},end:{line:102,column:13}},{start:{line:88,column:12},end:{line:102,column:13}}],line:88},"1":{loc:{start:{line:94,column:16},end:{line:101,column:17}},type:"if",locations:[{start:{line:94,column:16},end:{line:101,column:17}},{start:{line:94,column:16},end:{line:101,column:17}}],line:94},"2":{loc:{start:{line:136,column:12},end:{line:148,column:13}},type:"if",locations:[{start:{line:136,column:12},end:{line:148,column:13}},{start:{line:136,column:12},end:{line:148,column:13}}],line:136}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"5fd58acc1f388ab30b68ff3cd3228f19ccb5cf44"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/**
* @description: 
* @file: noteModel.js
* @author: Vedant Nare
* @version: 1.0
*/ /**
*@description Dependencies are installed for execution. 
*/const mongoose=(cov_966g5z81u.s[0]++,require('mongoose'));const logger=(cov_966g5z81u.s[1]++,require('../services/logService'));/**
*@description User schema is defined for storing data in database.
*/const noteSchema=(cov_966g5z81u.s[2]++,mongoose.Schema({note_id:{type:Number,required:true},title:{type:String,required:true},description:{type:String,required:true},reminder:{type:Array,required:false},color:{type:String,required:false},isArchived:{type:Boolean,required:false},isTrash:{type:Boolean,required:false}}));/**
*@description Note Model is defined for storing object in database. 
*/const Note=(cov_966g5z81u.s[3]++,mongoose.model('note',noteSchema));class noteModel{/**
    *@description UserModel has the following functions:
    * findOne: for finding a particular record from database. It takes a single parameter.
    * findAll: for retrieving list of existing records from database.
    * update: for updating user field in database.
    * add: for saving note object in note collection. 
    */findOne(req){cov_966g5z81u.f[0]++;cov_966g5z81u.s[4]++;return new Promise((resolve,reject)=>{cov_966g5z81u.f[1]++;cov_966g5z81u.s[5]++;Note.findOne(req).then(data=>{cov_966g5z81u.f[2]++;cov_966g5z81u.s[6]++;// logger.info(data); 
resolve(data);}).catch(err=>{cov_966g5z81u.f[3]++;cov_966g5z81u.s[7]++;logger.error(err);cov_966g5z81u.s[8]++;reject(err);});});}findAll(req,callback){cov_966g5z81u.f[4]++;cov_966g5z81u.s[9]++;Note.find(req,(err,data)=>{cov_966g5z81u.f[5]++;cov_966g5z81u.s[10]++;if(err){cov_966g5z81u.b[0][0]++;cov_966g5z81u.s[11]++;callback(err);}else{cov_966g5z81u.b[0][1]++;cov_966g5z81u.s[12]++;if(data.length!=0){cov_966g5z81u.b[1][0]++;cov_966g5z81u.s[13]++;callback(null,data);}else{cov_966g5z81u.b[1][1]++;cov_966g5z81u.s[14]++;callback({message:"No data found"});}}});}update(req,res,callback){cov_966g5z81u.f[6]++;cov_966g5z81u.s[15]++;// logger.info(req,res);
Note.updateOne(req,res).then(data=>{cov_966g5z81u.f[7]++;cov_966g5z81u.s[16]++;// logger.info(data);
callback(null,data);}).catch(err=>{cov_966g5z81u.f[8]++;cov_966g5z81u.s[17]++;callback(err);});}add(req,callback){cov_966g5z81u.f[9]++;const note=(cov_966g5z81u.s[18]++,new Note({note_id:req.note_id,title:req.title,description:req.description,reminder:req.reminder,color:req.color,isArchived:req.isArchived,isTrash:req.isTrash}));cov_966g5z81u.s[19]++;note.save((err,data)=>{cov_966g5z81u.f[10]++;cov_966g5z81u.s[20]++;if(err){cov_966g5z81u.b[2][0]++;cov_966g5z81u.s[21]++;callback(err);}else{cov_966g5z81u.b[2][1]++;let res=(cov_966g5z81u.s[22]++,{id:data._id,title:note.title,message:"Successfully created note"});cov_966g5z81u.s[23]++;callback(null,res);}});}}cov_966g5z81u.s[24]++;module.exports=new noteModel();