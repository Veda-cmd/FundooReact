var cov_iqisukyno=function(){var path="/home/admin1/Desktop/FundooApp/Backend/services/userService.js";var hash="993a03532cd1ceef0673e959a3384e44624d7743";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/admin1/Desktop/FundooApp/Backend/services/userService.js",statementMap:{"0":{start:{line:12,column:18},end:{line:12,column:48}},"1":{start:{line:13,column:13},end:{line:13,column:37}},"2":{start:{line:14,column:15},end:{line:14,column:38}},"3":{start:{line:24,column:8},end:{line:72,column:11}},"4":{start:{line:26,column:12},end:{line:71,column:15}},"5":{start:{line:35,column:16},end:{line:65,column:17}},"6":{start:{line:36,column:20},end:{line:36,column:65}},"7":{start:{line:43,column:31},end:{line:43,column:62}},"8":{start:{line:44,column:20},end:{line:64,column:22}},"9":{start:{line:47,column:38},end:{line:52,column:25}},"10":{start:{line:53,column:24},end:{line:59,column:26}},"11":{start:{line:55,column:28},end:{line:58,column:48}},"12":{start:{line:56,column:32},end:{line:56,column:44}},"13":{start:{line:58,column:32},end:{line:58,column:48}},"14":{start:{line:63,column:24},end:{line:63,column:36}},"15":{start:{line:69,column:16},end:{line:69,column:40}},"16":{start:{line:70,column:16},end:{line:70,column:28}},"17":{start:{line:81,column:8},end:{line:130,column:10}},"18":{start:{line:91,column:12},end:{line:123,column:13}},"19":{start:{line:97,column:16},end:{line:118,column:18}},"20":{start:{line:99,column:20},end:{line:117,column:21}},"21":{start:{line:101,column:24},end:{line:101,column:38}},"22":{start:{line:103,column:25},end:{line:117,column:21}},"23":{start:{line:105,column:24},end:{line:111,column:27}},"24":{start:{line:107,column:28},end:{line:110,column:51}},"25":{start:{line:108,column:32},end:{line:108,column:45}},"26":{start:{line:110,column:32},end:{line:110,column:51}},"27":{start:{line:115,column:24},end:{line:115,column:53}},"28":{start:{line:116,column:24},end:{line:116,column:69}},"29":{start:{line:122,column:16},end:{line:122,column:80}},"30":{start:{line:128,column:12},end:{line:128,column:30}},"31":{start:{line:129,column:12},end:{line:129,column:48}},"32":{start:{line:140,column:8},end:{line:171,column:10}},"33":{start:{line:142,column:12},end:{line:169,column:14}},"34":{start:{line:149,column:16},end:{line:163,column:17}},"35":{start:{line:151,column:31},end:{line:157,column:21}},"36":{start:{line:158,column:20},end:{line:158,column:36}},"37":{start:{line:162,column:18},end:{line:162,column:63}},"38":{start:{line:168,column:16},end:{line:168,column:27}},"39":{start:{line:180,column:8},end:{line:231,column:10}},"40":{start:{line:182,column:12},end:{line:230,column:14}},"41":{start:{line:190,column:16},end:{line:224,column:19}},"42":{start:{line:192,column:20},end:{line:223,column:21}},"43":{start:{line:194,column:24},end:{line:194,column:96}},"44":{start:{line:202,column:35},end:{line:202,column:70}},"45":{start:{line:203,column:24},end:{line:222,column:27}},"46":{start:{line:205,column:42},end:{line:208,column:29}},"47":{start:{line:209,column:28},end:{line:217,column:30}},"48":{start:{line:212,column:32},end:{line:212,column:50}},"49":{start:{line:216,column:32},end:{line:216,column:44}},"50":{start:{line:221,column:28},end:{line:221,column:40}},"51":{start:{line:229,column:16},end:{line:229,column:28}},"52":{start:{line:235,column:0},end:{line:235,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:22,column:4},end:{line:22,column:5}},loc:{start:{line:23,column:4},end:{line:73,column:5}},line:23},"1":{name:"(anonymous_1)",decl:{start:{line:24,column:27},end:{line:24,column:28}},loc:{start:{line:25,column:8},end:{line:72,column:9}},line:25},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:18},end:{line:27,column:19}},loc:{start:{line:28,column:12},end:{line:66,column:13}},line:28},"3":{name:"(anonymous_3)",decl:{start:{line:45,column:26},end:{line:45,column:27}},loc:{start:{line:46,column:20},end:{line:60,column:21}},line:46},"4":{name:"(anonymous_4)",decl:{start:{line:53,column:51},end:{line:53,column:52}},loc:{start:{line:54,column:24},end:{line:59,column:25}},line:54},"5":{name:"(anonymous_5)",decl:{start:{line:61,column:27},end:{line:61,column:28}},loc:{start:{line:62,column:20},end:{line:64,column:21}},line:62},"6":{name:"(anonymous_6)",decl:{start:{line:67,column:19},end:{line:67,column:20}},loc:{start:{line:68,column:12},end:{line:71,column:13}},line:68},"7":{name:"(anonymous_7)",decl:{start:{line:79,column:4},end:{line:79,column:5}},loc:{start:{line:80,column:4},end:{line:132,column:5}},line:80},"8":{name:"(anonymous_8)",decl:{start:{line:82,column:14},end:{line:82,column:15}},loc:{start:{line:83,column:8},end:{line:125,column:9}},line:83},"9":{name:"(anonymous_9)",decl:{start:{line:97,column:64},end:{line:97,column:65}},loc:{start:{line:98,column:16},end:{line:118,column:17}},line:98},"10":{name:"(anonymous_10)",decl:{start:{line:105,column:45},end:{line:105,column:46}},loc:{start:{line:106,column:24},end:{line:111,column:25}},line:106},"11":{name:"(anonymous_11)",decl:{start:{line:126,column:15},end:{line:126,column:16}},loc:{start:{line:127,column:8},end:{line:130,column:9}},line:127},"12":{name:"(anonymous_12)",decl:{start:{line:138,column:4},end:{line:138,column:5}},loc:{start:{line:139,column:4},end:{line:172,column:5}},line:139},"13":{name:"(anonymous_13)",decl:{start:{line:140,column:27},end:{line:140,column:28}},loc:{start:{line:141,column:8},end:{line:171,column:9}},line:141},"14":{name:"(anonymous_14)",decl:{start:{line:143,column:18},end:{line:143,column:19}},loc:{start:{line:144,column:12},end:{line:165,column:13}},line:144},"15":{name:"(anonymous_15)",decl:{start:{line:166,column:19},end:{line:166,column:20}},loc:{start:{line:167,column:12},end:{line:169,column:13}},line:167},"16":{name:"(anonymous_16)",decl:{start:{line:178,column:4},end:{line:178,column:5}},loc:{start:{line:179,column:4},end:{line:232,column:5}},line:179},"17":{name:"(anonymous_17)",decl:{start:{line:180,column:27},end:{line:180,column:28}},loc:{start:{line:181,column:8},end:{line:231,column:9}},line:181},"18":{name:"(anonymous_18)",decl:{start:{line:183,column:18},end:{line:183,column:19}},loc:{start:{line:184,column:12},end:{line:226,column:13}},line:184},"19":{name:"(anonymous_19)",decl:{start:{line:190,column:68},end:{line:190,column:69}},loc:{start:{line:191,column:16},end:{line:224,column:17}},line:191},"20":{name:"(anonymous_20)",decl:{start:{line:203,column:34},end:{line:203,column:35}},loc:{start:{line:204,column:24},end:{line:218,column:25}},line:204},"21":{name:"(anonymous_21)",decl:{start:{line:210,column:34},end:{line:210,column:35}},loc:{start:{line:211,column:28},end:{line:213,column:29}},line:211},"22":{name:"(anonymous_22)",decl:{start:{line:214,column:35},end:{line:214,column:36}},loc:{start:{line:215,column:28},end:{line:217,column:29}},line:215},"23":{name:"(anonymous_23)",decl:{start:{line:219,column:31},end:{line:219,column:32}},loc:{start:{line:220,column:24},end:{line:222,column:25}},line:220},"24":{name:"(anonymous_24)",decl:{start:{line:227,column:19},end:{line:227,column:20}},loc:{start:{line:228,column:12},end:{line:230,column:13}},line:228}},branchMap:{"0":{loc:{start:{line:35,column:16},end:{line:65,column:17}},type:"if",locations:[{start:{line:35,column:16},end:{line:65,column:17}},{start:{line:35,column:16},end:{line:65,column:17}}],line:35},"1":{loc:{start:{line:55,column:28},end:{line:58,column:48}},type:"if",locations:[{start:{line:55,column:28},end:{line:58,column:48}},{start:{line:55,column:28},end:{line:58,column:48}}],line:55},"2":{loc:{start:{line:91,column:12},end:{line:123,column:13}},type:"if",locations:[{start:{line:91,column:12},end:{line:123,column:13}},{start:{line:91,column:12},end:{line:123,column:13}}],line:91},"3":{loc:{start:{line:99,column:20},end:{line:117,column:21}},type:"if",locations:[{start:{line:99,column:20},end:{line:117,column:21}},{start:{line:99,column:20},end:{line:117,column:21}}],line:99},"4":{loc:{start:{line:103,column:25},end:{line:117,column:21}},type:"if",locations:[{start:{line:103,column:25},end:{line:117,column:21}},{start:{line:103,column:25},end:{line:117,column:21}}],line:103},"5":{loc:{start:{line:107,column:28},end:{line:110,column:51}},type:"if",locations:[{start:{line:107,column:28},end:{line:110,column:51}},{start:{line:107,column:28},end:{line:110,column:51}}],line:107},"6":{loc:{start:{line:149,column:16},end:{line:163,column:17}},type:"if",locations:[{start:{line:149,column:16},end:{line:163,column:17}},{start:{line:149,column:16},end:{line:163,column:17}}],line:149},"7":{loc:{start:{line:192,column:20},end:{line:223,column:21}},type:"if",locations:[{start:{line:192,column:20},end:{line:223,column:21}},{start:{line:192,column:20},end:{line:223,column:21}}],line:192}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"993a03532cd1ceef0673e959a3384e44624d7743"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();/**
* @description: 
* @file: userService.js
* @author: Vedant Nare
* @version: 1.0
*/ /**
*@description Dependencies are installed for execution. 
*/const userModel=(cov_iqisukyno.s[0]++,require('../models/userModel'));const util=(cov_iqisukyno.s[1]++,require('./utilService'));const logger=(cov_iqisukyno.s[2]++,require('./logService'));class Userservice{/**
    *@description Register service returns a promise which is either resolved/rejected. 
    */register(req){cov_iqisukyno.f[0]++;cov_iqisukyno.s[3]++;return new Promise((resolve,reject)=>{cov_iqisukyno.f[1]++;cov_iqisukyno.s[4]++;userModel.findOne({email:req.email}).then(data=>{cov_iqisukyno.f[2]++;cov_iqisukyno.s[5]++;// logger.info(data);
/**
                *@description If data is found, reject method is called.
                */if(data){cov_iqisukyno.b[0][0]++;cov_iqisukyno.s[6]++;reject({message:"Email already registered"});}else{cov_iqisukyno.b[0][1]++;/**
                    *@description Password is hashed using bcrypt.
                    */let hash=(cov_iqisukyno.s[7]++,util.hashPassword(req.password));cov_iqisukyno.s[8]++;hash.then(data=>{cov_iqisukyno.f[3]++;let request=(cov_iqisukyno.s[9]++,{firstName:req.firstName,lastName:req.lastName,email:req.email,password:data});cov_iqisukyno.s[10]++;userModel.register(request,(err,result)=>{cov_iqisukyno.f[4]++;cov_iqisukyno.s[11]++;if(err){cov_iqisukyno.b[1][0]++;cov_iqisukyno.s[12]++;reject(err);}else{cov_iqisukyno.b[1][1]++;cov_iqisukyno.s[13]++;resolve(result);}});}).catch(err=>{cov_iqisukyno.f[5]++;cov_iqisukyno.s[14]++;reject(err);});}}).catch(err=>{cov_iqisukyno.f[6]++;cov_iqisukyno.s[15]++;logger.error('Err',err);cov_iqisukyno.s[16]++;reject(err);});});}/**
    *@description Login service issues a callback to the calling function. 
    */login(req,callback){cov_iqisukyno.f[7]++;cov_iqisukyno.s[17]++;userModel.findOne({email:req.email}).then(data=>{cov_iqisukyno.f[8]++;cov_iqisukyno.s[18]++;// logger.info(data);
// logger.info('data',data.verify_value);
/**
            *@description If isVerified property is true, then further operation are performed.
            */if(data.isVerified){cov_iqisukyno.b[2][0]++;cov_iqisukyno.s[19]++;/**
                *@description Bcrypt compare password is used for matching input and output passwords
                */util.comparePassword(req.password,data.password,(err,result)=>{cov_iqisukyno.f[9]++;cov_iqisukyno.s[20]++;if(err){cov_iqisukyno.b[3][0]++;cov_iqisukyno.s[21]++;callback(err);}else{cov_iqisukyno.b[3][1]++;cov_iqisukyno.s[22]++;if(result){cov_iqisukyno.b[4][0]++;cov_iqisukyno.s[23]++;userModel.login(data,(err,res)=>{cov_iqisukyno.f[10]++;cov_iqisukyno.s[24]++;if(err){cov_iqisukyno.b[5][0]++;cov_iqisukyno.s[25]++;callback(err);}else{cov_iqisukyno.b[5][1]++;cov_iqisukyno.s[26]++;callback(null,res);}});}else{cov_iqisukyno.b[4][1]++;cov_iqisukyno.s[27]++;logger.error('Login failed');cov_iqisukyno.s[28]++;callback({message:"Wrong password entered"});}}});}else{cov_iqisukyno.b[2][1]++;cov_iqisukyno.s[29]++;callback({message:'User is not verified yet.Please check mail'});}}).catch(err=>{cov_iqisukyno.f[11]++;cov_iqisukyno.s[30]++;logger.error(err);cov_iqisukyno.s[31]++;callback({message:'User not found'});});}/**
    *@description Forgot service returns a promise which is either resolved/rejected. 
    */forgot(req){cov_iqisukyno.f[12]++;cov_iqisukyno.s[32]++;return new Promise((resolve,reject)=>{cov_iqisukyno.f[13]++;cov_iqisukyno.s[33]++;userModel.findOne({email:req.email}).then(data=>{cov_iqisukyno.f[14]++;cov_iqisukyno.s[34]++;/**
                 *@description If isVerified property is true, then further operation are performed.
                */if(data.isVerified==true){cov_iqisukyno.b[6][0]++;let result=(cov_iqisukyno.s[35]++,{id:data._id,email:data.email,firstName:data.firstName,success:true,message:"Success"});cov_iqisukyno.s[36]++;resolve(result);}else{cov_iqisukyno.b[6][1]++;cov_iqisukyno.s[37]++;reject({message:'User is not verified yet'});}}).catch(err=>{cov_iqisukyno.f[15]++;cov_iqisukyno.s[38]++;reject(err);});});}/**
    *@description Reset service returns a promise which is either resolved/rejected. 
    */reset(req){cov_iqisukyno.f[16]++;cov_iqisukyno.s[39]++;return new Promise((resolve,reject)=>{cov_iqisukyno.f[17]++;cov_iqisukyno.s[40]++;userModel.findOne({forgot_token:req.token}).then(data=>{cov_iqisukyno.f[18]++;cov_iqisukyno.s[41]++;/**
                *@description Bcrypt compare password is used for matching input and output passwords
                */util.comparePassword(req.new_password,data.password,(fail,success)=>{cov_iqisukyno.f[19]++;cov_iqisukyno.s[42]++;if(success){cov_iqisukyno.b[7][0]++;cov_iqisukyno.s[43]++;reject({message:"This password has been used before. Please try again"});}else{cov_iqisukyno.b[7][1]++;/**
                        *@description Password is hashed using bcrypt.
                        */let hash=(cov_iqisukyno.s[44]++,util.hashPassword(req.new_password));cov_iqisukyno.s[45]++;hash.then(res=>{cov_iqisukyno.f[20]++;let request=(cov_iqisukyno.s[46]++,{_id:data._id,password:res});cov_iqisukyno.s[47]++;userModel.reset(request).then(response=>{cov_iqisukyno.f[21]++;cov_iqisukyno.s[48]++;resolve(response);}).catch(err=>{cov_iqisukyno.f[22]++;cov_iqisukyno.s[49]++;reject(err);});}).catch(err=>{cov_iqisukyno.f[23]++;cov_iqisukyno.s[50]++;reject(err);});}});}).catch(err=>{cov_iqisukyno.f[24]++;cov_iqisukyno.s[51]++;reject(err);});});}}cov_iqisukyno.s[52]++;module.exports=new Userservice();